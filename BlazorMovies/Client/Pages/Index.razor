@page "/"
@page "/index"
@inject IRepository repository
@using static BlazorMovies.Client.Shared.MainLayout


<div>
    <h3 style="color: @appParameter.Color;font-size: @appParameter.Size">Movie</h3>
    <MoviesList Movies="movies" />
</div>

<CustomTypeahead SearchMethod="SearchMethod">
    <ResultTemplate>
        @context
    </ResultTemplate>
</CustomTypeahead>

@code{

    [CascadingParameter] public AppParameter appParameter { get; set; }

    private List<Movie> movies;
    protected async override Task OnInitializedAsync()
    {
        await   Task.Delay(1000);
        movies = repository.GetMovies();
    }

    private async Task<IEnumerable<string>> SearchMethod(string searchText)
    {
        await Task.Delay(2000);
        if (searchText == "test") { return Enumerable.Empty<string>(); }
        return new List<string>() { "Felipe", "Gavilanch2" };
    }

#region "Razor Page Lifetime events"
    @* protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized. Movies.Count = " + movies.Count.ToString());
    } *@


    
    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParametersSet. Movies.Count = " + movies.Count.ToString());
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine("OnAfterRender. FirstRender = " + firstRender.ToString());
    }

    protected override bool ShouldRender()
    {
        return true;
    }
    #endregion
}